# -*- coding: utf-8 -*-
"""grip1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1odx6vUKt2QtUXzz6MKmOQ9RZ4g4uBQLp

# Hours Scores Prediction
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split  
from sklearn.linear_model import LinearRegression
# %matplotlib inline

"""# Data Preprocessing"""

data = pd.read_csv('/content/student_scores - student_scores.csv')

data.head()

data.head()

data.info()

data.shape

data.size

data.tail()

data.describe()

data.isnull().sum()

"""Data Preparation"""

X = data.iloc[:, :-1].values  
Y = data.iloc[:, 1].values

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=57)

model = LinearRegression()
model.fit(X_train, Y_train)

Y_pred = model.predict(X_test)

plt.scatter(X_train, Y_train,color='g') 
plt.plot(X_test, Y_pred,color='k') 
plt.title("Prediction Line")
plt.xlabel("Number of hours")
plt.ylabel("Scores")
plt.show()

print("The accuracy of this model on testing comes out as {:.2f}%".format(model.score(X_test, Y_test)*100))

df = pd.DataFrame({'Actual': Y_test, 'Predicted': Y_pred})

df

x_ax = range(len(Y_test))
plt.plot(x_ax, Y_test, label="original")
plt.plot(x_ax, Y_pred, label="predicted")
plt.title("Actual Scores and predicted data")
plt.legend()
plt.show()

num = [[9.25]]
pred = model.predict(num)
print("Number of Hours = {}".format(num))
print("Predicted Score = {:.2f}".format(pred[0]))